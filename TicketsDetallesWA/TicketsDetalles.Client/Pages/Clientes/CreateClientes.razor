@page "/CreateClientes"

@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<EditForm Model="Clientes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card shadow-lg border-0 rounded" style="background-color: #f8f9fa;">
        <div class="card-header bg-primary text-white d-flex justify-content-center align-items-center">
            <h3 class="mb-0"> <i class="fas fa-clipboard-list"></i> Registro de Clientes</h3>
        </div>
        <div class="card-body">

            <div class="row">

                <div class="col-md-6 mb-3">
                    <label for="ClienteId" class="form-label">ID del Cliente:</label>
                    <div class="input-group">
                        <div style="width: 90%; height: 2em;">
                            <InputNumber @bind-Value="Clientes.ClienteId" class="form-control" style="font-size: 0.8em;" aria-describedby="BotonBuscar" />
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="RNCCliente" class="form-label">RNC:</label>
                    <div class="input-group">
                        <div style="width: 46em; height: 2.5em;">
                            <InputText @bind-Value="Clientes.RNCCliente" class="form-control" style="font-size: 0.8em;" />
                            <ValidationMessage For="@(() => Clientes.RNCCliente)" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="NombreCliente" class="form-label">Nombre:</label>
                <InputText @bind-Value="Clientes.NombreCliente" class="form-control" style="width: 60em; height: 2.5em" />
                 <ValidationMessage For="@(() => Clientes.NombreCliente)" />
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <p class="text-danger">@ErrorMessage</p>
                }
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="TelefonoCliente" class="form-label">Teléfono:</label>
                    <div class="input-group">
                        <div style="width: 100%; height: 2em;">
                            <InputNumber @bind-Value="Clientes.TelefonoCliente" class="form-control" style="font-size: 0.8em;" />
                            <ValidationMessage For="@(() => Clientes.TelefonoCliente)" />
                        </div>
                    </div>
                </div>

                <div class="col-md-6 ">
                    <label for="CelularCliente" class="form-label">Celular:</label>
                    <div class="input-group">
                        <div style="width: 100%; height: 2em;">
                            <InputNumber @bind-Value="Clientes.CelularCliente" class="form-control" style="font-size: 0.8em;" />
                            <ValidationMessage For="@(() => Clientes.CelularCliente)" />
                        </div>
                    </div>
                </div>
            </div>


            <div class="mb-3">
                <label for="EmailCliente" class="form-label">Email:</label>
                <InputText @bind-Value="Clientes.EmailCliente" class="form-control" style="width: 60em; height: 2.5em" />
                <ValidationMessage For="@(() => Clientes.EmailCliente)" />
            </div>

            <div class="mb-3">
                <label for="DireccionCliente" class="form-label">Dirección:</label>
                <InputText @bind-Value="Clientes.DireccionCliente" class="form-control" style="width: 60em; height: 5em" />
                <ValidationMessage For="@(() => Clientes.DireccionCliente)" />
            </div>

        </div>

        <div class="card-footer bg-light d-flex justify-content-center mt-3">
            <div class="btn-group">
                <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
                <a type="button" href="/ClientesIndex/" class="btn btn-outline-danger"><span class="fas fa-arrow-left"></span> Retroceder </a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Clientes Clientes = new Clientes();
    public string ErrorMessage { get; set; }

    public async Task Guardar()
    {
        // Verificar si el NombreCliente ya existe en la base de datos
        bool existeCliente = await VerificarNombreCliente();

        if (existeCliente)
        {
            ErrorMessage = "Ya existe un cliente con el mismo nombre.";
        }
        else
        {
            var guardado = await httpClient.PostAsJsonAsync("api/Clientes", this.Clientes);
            if (guardado.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/ClientesIndex");
            }
            else
            {
                ErrorMessage = "No se pudo guardar el cliente. Por favor, inténtelo de nuevo.";
            }
        }
    }

    public async Task<bool> VerificarNombreCliente()
    {
        // Verificar si el NombreCliente ya existe en la base de datos
        var clientes = await httpClient.GetFromJsonAsync<List<Clientes>>("api/Clientes");
        return clientes.Any(c => c.NombreCliente == Clientes.NombreCliente);
    }
}



